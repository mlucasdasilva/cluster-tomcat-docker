version: '2'
#version: '3'

services:
    tomcat1:
      image: tomcat:8.0
      ports: 
        - "8081:8080"
#      deploy:
#        replicas: 1
#        placement:
#          constraints: 
##            - node.role == manager
#            - node.hostname == docker01
      environment:
        CATALINA_BASE: /usr/local/tomcat
      volumes:
        - ./tomcat/conf:/usr/local/tomcat/conf
        - ./apptest/apptest.war:/usr/local/tomcat/webapps/apptest.war
#      networks:
#        tomcatnetwork:
#             ipv4_address: 172.28.5.1
      hostname: tomcat1

    tomcat2:
      image: tomcat:8.0
      ports: 
        - "8082:8080"
#      deploy:
#        replicas: 1
#        placement:
#          constraints: 
##            - node.role == manager
#            - node.hostname == docker02
      environment:
        CATALINA_BASE: /usr/local/tomcat
      volumes:
        - ./tomcat/conf:/usr/local/tomcat/conf
        - ./apptest/apptest.war:/usr/local/tomcat/webapps/apptest.war
#      networks:
#        tomcatnetwork:
#             ipv4_address: 172.28.5.2
      hostname: tomcat2

    tomcat3:
      image: tomcat:8.0
      ports: 
        - "8083:8080"
#      deploy:
#        replicas: 1
#        placement:
#          constraints: 
##            - node.role == manager
#            - node.hostname == docker02
      environment:
        CATALINA_BASE: /usr/local/tomcat
      volumes:
        - ./tomcat/conf:/usr/local/tomcat/conf
        - ./apptest/apptest.war:/usr/local/tomcat/webapps/apptest.war
#      networks:
#        tomcatnetwork:
#             ipv4_address: 172.28.5.3
      hostname: tomcat3


    balancer1:
     image: jasonwyatt/nginx-loadbalancer
     ports:
      - "8091:80"
     environment:
      - TOMCAT_PORT=8091
      # automatically created environment variables (docker links)
      - TOMCAT_1_PORT_8080_TCP_ADDR=tomcat1
      - TOMCAT_2_PORT_8080_TCP_ADDR=tomcat2
      - TOMCAT_3_PORT_8080_TCP_ADDR=tomcat3
      # special environment variables
      - TOMCAT_PATH=/apptest
      - TOMCAT_REMOTE_PORT=8080
      - TOMCAT_REMOTE_PATH=/apptest
      - TOMCAT_HOSTNAME=balancer1
#     networks:
#      tomcatnetwork:
#         ipv4_address: 172.28.5.4

    balancer2:
     image: jasonwyatt/nginx-loadbalancer
     ports:
      - "8092:80"
     environment:
      - TOMCAT_PORT=8092
      # automatically created environment variables (docker links)
      - TOMCAT_1_PORT_8080_TCP_ADDR=tomcat1
      - TOMCAT_2_PORT_8080_TCP_ADDR=tomcat2
      - TOMCAT_3_PORT_8080_TCP_ADDR=tomcat3
      # special environment variables
      - TOMCAT_PATH=/manager
      - TOMCAT_REMOTE_PORT=8080
      - TOMCAT_REMOTE_PATH=/manager
      - TOMCAT_HOSTNAME=balancer2
#     networks:
#      tomcatnetwork:
#         ipv4_address: 172.28.5.5

    nginx1:
      image: nginx
      volumes:
       - ./nginx1/conf.d:/etc/nginx/conf.d
      ports:
       - "8095:80"
      environment:
       - NGINX_HOST=nginx1
       - NGINX_PORT=80
#      networks:
#       tomcatnetwork:
#         ipv4_address: 172.28.5.6

    nginx2:
      image: nginx
      volumes:
       - ./nginx2/conf.d:/etc/nginx/conf.d
      ports:
       - "8096:80"
      environment:
       - NGINX_HOST=nginx1
       - NGINX_PORT=80
#      networks:
#       tomcatnetwork:
#         ipv4_address: 172.28.5.7

    haproxy1:
      image: haproxy:1.7
      volumes:
       - ./haproxy1/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
       - ./haproxy1/conf.d:/usr/local/etc/haproxy/conf.d
      ports:
       - "8097:80"
#      networks:
#       tomcatnetwork:
#         ipv4_address: 172.28.5.8
#      command: "haproxy -c -f /usr/local/etc/haproxy/haproxy.cfg"
#      entrypoint: bash -c "haproxy -f /usr/local/etc/haproxy/haproxy.cfg"
#      stdin_open: true
#      tty: true
#      entrypoint: "/bin/bash"
#      command: "-c /bin/bash"

#networks:
# tomcatnetwork:
##  driver: overlay
#  driver: bridge
#  ipam:
#   config:
#    - subnet: 172.28.0.0/16
#      gateway: 172.28.5.254
##    - ip-range: 172.28.5.0/24

